# Install Prometheus (if not already installed)
# Flagger relies on metrics from Prometheus to monitor the health of canary deployments. 
# If you don’t have Prometheus installed, you can use the following command to install it via Helm:

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
helm install prometheus prometheus-community/prometheus \
  --namespace monitoring --create-namespace

# This will install Prometheus into a monitoring namespace.
# Install Flagger
# You can install Flagger using Helm, specifying that you’re using the Nginx Ingress Controller.

helm repo add flagger https://flagger.app
helm repo update

helm upgrade -i flagger flagger/flagger \
  --namespace flagger-system --create-namespace \
  --set crd.create=true \
  --set meshProvider=nginx \
  --set prometheus.install=true
  
# This command installs Flagger in the flagger-system namespace and configures it to work with the Nginx Ingress Controller.
# Configure Nginx Ingress Controller for Canary Releases
# To enable canary releases with Nginx Ingress, make sure that the Nginx Ingress Controller has the appropriate canary features enabled. You can do this by adding the following annotations to your Ingress resources:
# Enable canary on specific services:

nginx.ingress.kubernetes.io/canary: "true"
nginx.ingress.kubernetes.io/canary-weight: "20"  # 20% of traffic

# Refactor the Services
# For Flagger to manage traffic splitting between the two deployments, you’ll need two services: 
# one that represents the stable version (apache-service) and another for the canary version (nginx-service).
